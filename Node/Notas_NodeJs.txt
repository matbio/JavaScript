INSTRUÇÕES DE TRABALHO E COMANDOS PARA UM PROJETO EM NODEJS

- Primeiro é importante ter o NodeJs LTS instalado, ao instala-lo junto ao Node virá o NPM que é seu gerenciador de pacotes.
- Os comandos node - v e npm -v mostram as suas respectivas versões.
- Para Iniciar um projeto comando npm init, exemplo do log de criação:

        C:\EstudoQA\JavaScript\Node\Hello>npm init
        O sistema não pode encontrar o caminho especificado.
        This utility will walk you through creating a package.json file.
        It only covers the most common items, and tries to guess sensible defaults.

        See `npm help init` for definitive documentation on these fields
        and exactly what they do.

        Use `npm install <pkg>` afterwards to install a package and
        save it as a dependency in the package.json file.

        Press ^C at any time to quit.
        package name: (hello)
        version: (1.0.0)
        description: Projeto basico utilizando o NodeJs e o Express
        entry point: (index.js) app.js
        test command:
        git repository:
        keywords: test, nodejs, unitest, apitest
        author: Matheus Bio Salles
        license: (ISC)
        About to write to C:\EstudoQA\JavaScript\Node\Hello\package.json:

        {
          "name": "hello",
          "version": "1.0.0",
          "description": "Projeto basico utilizando o NodeJs e o Express",
          "main": "app.js",
          "scripts": {
            "test": "echo \"Error: no test specified\" && exit 1"
          },
          "keywords": [
            "test",
            "nodejs",
            "unitest",
            "apitest"
          ],
          "author": "Matheus Bio Salles",
          "license": "ISC"
        }


        Is this OK? (yes) yes

- Após a geração do projeto, devemos criar o arquivo inicializador do mesmo, no caso acima app.js (Importante ser o mesmo informado na geração do projeto).
- Para a execução do projeto o comando : node [nome do arquivo] exemplo: node app.js
- O comando npm install instala as dependências.

---------- API's COM NODEJS UTILIZANDO O EXPRESS ----------
- Para utilizar o Express, no diretório do projeto executar o comando: npm install express
- Anexar no arquivo da aplicação os comandos:
    const express = require('express')
    const app = express()

- Para verificar a documentação: https://expressjs.com/

---------- ATUALIZANDO O ES5 PARA O ES6 (ECMASCRIPT2015) UTILIZANDO O BABEL ----------
- O Node já dá um suporte peuqeno para o ES6, mas para utlização plena dele é necesário:
  - Instalar o babel cli, core, preset-env e node:
      npm install --save-dev @babel/core @babel/cli @babel/preset-env
      npm install --save-dev @babel/node

  - Instalar o babel register:
      npm install --save-dev @babel/register

  - criar o arquivo babel.config.json com as seguintes informações:
      {
          "presets": [
            [
              "@babel/env",
              {
                "targets": {
                  "edge": "17",
                  "firefox": "60",
                  "chrome": "67",
                  "safari": "11.1"
                },
                "useBuiltIns": "usage",
                "corejs": "3.6.5"
              }
            ]
          ]
        }
  - Alterar o arquivo package.json para se adequar a execução dos testes:
      "scripts": {
        "start": "npx babel-node app.js",
        "test": "mocha test --require @babel/register --exit"
      },
- Para verificar a documentação: https://babeljs.io/docs/en/usage